{
  "contractName": "ValorToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SimpleToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/e/work/cryptoblades/contracts/ValorToken.sol\":\"ValorToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/e/work/cryptoblades/contracts/ValorToken.sol\":{\"keccak256\":\"0x6d573ff21fe0c36596de140b7639122df0a8a648c31926be9737e1b6a91f6fe7\",\"urls\":[\"bzz-raw://2a917ea07acb6adb055acde5788e8d53a5d0ed3b11481d29d49e4697e41e9db1\",\"dweb:/ipfs/QmPUB9c88Q7Ff4T5qQAXfar8Q7zj252Zn31QC7W9fPJ6Eb\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"urls\":[\"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c\",\"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724\",\"urls\":[\"bzz-raw://5e30d594df25d0651c2cd6f85d856e5fc9f3dbae68d017e1da33eb3c7e2f1ecc\",\"dweb:/ipfs/QmPgkV99jZr3Zs9ex8dJ5j22oX4wDuDtMCnXNy67bTwgAB\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x506dd0718f9ace50588c13848167df5e04ae16abb56341afb10c31ff149bc79b\",\"urls\":[\"bzz-raw://f8f230f6d6889a76ae5a6563c3e0acaee90a8687896188be90fff8d9574c8e13\",\"dweb:/ipfs/QmcdZmHdcbBkbSet3Yx8hceQK4itK8SBrV7G2nasVZGJwH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611434806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102ec578063a9059cbb14610318578063dd62ed3e14610344578063f2fde38b1461037257610100565b8063715018a6146102b05780638129fc1c146102b85780638da5cb5b146102c057806395d89b41146102e457610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806340c10f191461025c57806370a082311461028a57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610398565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042f565b604080519115158252519081900360200190f35b6101ca61044c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610452565b61021a6104df565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104e8565b6102886004803603604081101561027257600080fd5b506001600160a01b03813516906020013561053c565b005b6101ca600480360360208110156102a057600080fd5b50356001600160a01b03166105be565b6102886105d9565b610288610697565b6102c86107b5565b604080516001600160a01b039092168252519081900360200190f35b61010d6107c4565b6101ae6004803603604081101561030257600080fd5b506001600160a01b038135169060200135610825565b6101ae6004803603604081101561032e57600080fd5b506001600160a01b038135169060200135610893565b6101ca6004803603604081101561035a57600080fd5b506001600160a01b03813581169160200135166108a7565b6102886004803603602081101561038857600080fd5b50356001600160a01b03166108d2565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b505050505090505b90565b600061044361043c6109e7565b84846109eb565b50600192915050565b60355490565b600061045f848484610ad7565b6104d58461046b6109e7565b6104d085604051806060016040528060288152602001611369602891396001600160a01b038a166000908152603460205260408120906104a96109e7565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610c4016565b6109eb565b5060019392505050565b60385460ff1690565b60006104436104f56109e7565b846104d085603460006105066109e7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610cd716565b6105446109e7565b6001600160a01b03166105556107b5565b6001600160a01b0316146105b0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105ba8282610d38565b5050565b6001600160a01b031660009081526033602052604090205490565b6105e16109e7565b6001600160a01b03166105f26107b5565b6001600160a01b03161461064d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b600054610100900460ff16806106b057506106b0610e36565b806106be575060005460ff16155b6106f95760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff16158015610724576000805460ff1961ff0019909116610100171660011790555b61076e6040518060400160405280600b81526020016a2b30b637b9102a37b5b2b760a91b815250604051806040016040528060058152602001642b20a627a960d91b815250610e47565b610776610efd565b610793306107826104df565b60ff16600a0a6305f5e10002610d38565b6107a030336104d061044c565b80156107b2576000805461ff00191690555b50565b6065546001600160a01b031690565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b60006104436108326109e7565b846104d0856040518060600160405280602581526020016113da602591396034600061085c6109e7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610c4016565b60006104436108a06109e7565b8484610ad7565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6108da6109e7565b6001600160a01b03166108eb6107b5565b6001600160a01b031614610946576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661098b5760405162461bcd60e51b81526004018080602001828103825260268152602001806112cd6026913960400191505060405180910390fd5b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610a305760405162461bcd60e51b81526004018080602001828103825260248152602001806113b66024913960400191505060405180910390fd5b6001600160a01b038216610a755760405162461bcd60e51b81526004018080602001828103825260228152602001806112f36022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b1c5760405162461bcd60e51b81526004018080602001828103825260258152602001806113916025913960400191505060405180910390fd5b6001600160a01b038216610b615760405162461bcd60e51b81526004018080602001828103825260238152602001806112aa6023913960400191505060405180910390fd5b610b6c838383610ef8565b610baf81604051806060016040528060268152602001611315602691396001600160a01b038616600090815260336020526040902054919063ffffffff610c4016565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610be4908263ffffffff610cd716565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ccf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c94578181015183820152602001610c7c565b50505050905090810190601f168015610cc15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d31576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d93576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d9f60008383610ef8565b603554610db2908263ffffffff610cd716565b6035556001600160a01b038216600090815260336020526040902054610dde908263ffffffff610cd716565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000610e4130610f9a565b15905090565b600054610100900460ff1680610e605750610e60610e36565b80610e6e575060005460ff16155b610ea95760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff16158015610ed4576000805460ff1961ff0019909116610100171660011790555b610edc610fa0565b610ee68383611040565b8015610ef8576000805461ff00191690555b505050565b600054610100900460ff1680610f165750610f16610e36565b80610f24575060005460ff16155b610f5f5760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff16158015610f8a576000805460ff1961ff0019909116610100171660011790555b610f92610fa0565b6107a0611118565b3b151590565b600054610100900460ff1680610fb95750610fb9610e36565b80610fc7575060005460ff16155b6110025760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff161580156107a0576000805460ff1961ff00199091166101001716600117905580156107b2576000805461ff001916905550565b600054610100900460ff16806110595750611059610e36565b80611067575060005460ff16155b6110a25760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff161580156110cd576000805460ff1961ff0019909116610100171660011790555b82516110e0906036906020860190611211565b5081516110f4906037906020850190611211565b506038805460ff191660121790558015610ef8576000805461ff0019169055505050565b600054610100900460ff16806111315750611131610e36565b8061113f575060005460ff16155b61117a5760405162461bcd60e51b815260040180806020018281038252602e81526020018061133b602e913960400191505060405180910390fd5b600054610100900460ff161580156111a5576000805460ff1961ff0019909116610100171660011790555b60006111af6109e7565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156107b2576000805461ff001916905550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061125257805160ff191683800117855561127f565b8280016001018555821561127f579182015b8281111561127f578251825591602001919060010190611264565b5061128b92915061128f565b5090565b61042c91905b8082111561128b576000815560010161129556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122015e7d0eedf5ee6ebca2c6976ae3a3f6aa6e731672125b8809b9f3513219093a764736f6c63430006050033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "525:450:61:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;525:450:61;;;;;;;",
  "deployedSourceMap": "525:450:61:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;525:450:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2517:89:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2517:89:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4593:166:108;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3584:106;;;:::i;:::-;;;;;;;;;;;;;;;;5226:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5226:317:108;;;;;;;;;;;;;;;;;:::i;3435:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5938:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5938:215:108;;;;;;;;:::i;868:105:61:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;868:105:61;;;;;;;;:::i;:::-;;3748:125:108;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3748:125:108;-1:-1:-1;;;;;3748:125:108;;:::i;1967:145:103:-;;;:::i;591:271:61:-;;;:::i;1335:85:103:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1335:85:103;;;;;;;;;;;;;;2719:93:108;;;:::i;6640:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6640:266:108;;;;;;;;:::i;4076:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4076:172:108;;;;;;;;:::i;4306:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4306:149:108;;;;;;;;;;:::i;2261:240:103:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2261:240:103;-1:-1:-1;;;;;2261:240:103;;:::i;2517:89:108:-;2594:5;2587:12;;;;;;;;-1:-1:-1;;2587:12:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:13;;2587:12;;2594:5;;2587:12;;2594:5;2587:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:89;;:::o;4593:166::-;4676:4;4692:39;4701:12;:10;:12::i;:::-;4715:7;4724:6;4692:8;:39::i;:::-;-1:-1:-1;4748:4:108;4593:166;;;;:::o;3584:106::-;3671:12;;3584:106;:::o;5226:317::-;5332:4;5348:36;5358:6;5366:9;5377:6;5348:9;:36::i;:::-;5394:121;5403:6;5411:12;:10;:12::i;:::-;5425:89;5463:6;5425:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5425:19:108;;;;;;:11;:19;;;;;;5445:12;:10;:12::i;:::-;-1:-1:-1;;;;;5425:33:108;;;;;;;;;;;;-1:-1:-1;5425:33:108;;;:89;;:37;:89;:::i;:::-;5394:8;:121::i;:::-;-1:-1:-1;5532:4:108;5226:317;;;;;:::o;3435:89::-;3508:9;;;;3435:89;:::o;5938:215::-;6026:4;6042:83;6051:12;:10;:12::i;:::-;6065:7;6074:50;6113:10;6074:11;:25;6086:12;:10;:12::i;:::-;-1:-1:-1;;;;;6074:25:108;;;;;;;;;;;;;;;;;-1:-1:-1;6074:25:108;;;:34;;;;;;;;;;;:50;:38;:50;:::i;868:105:61:-;1558:12:103;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:103;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:103;;1539:68;;;;;-1:-1:-1;;;1539:68:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:22:61::1;950:7;959:6;944:5;:22::i;:::-;868:105:::0;;:::o;3748:125:108:-;-1:-1:-1;;;;;3848:18:108;3822:7;3848:18;;;:9;:18;;;;;;;3748:125::o;1967:145:103:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:103;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:103;;1539:68;;;;;-1:-1:-1;;;1539:68:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2057:6:::1;::::0;2036:40:::1;::::0;2073:1:::1;::::0;-1:-1:-1;;;;;2057:6:103::1;::::0;2036:40:::1;::::0;2073:1;;2036:40:::1;2086:6;:19:::0;;-1:-1:-1;;;;;;2086:19:103::1;::::0;;1967:145::o;591:271:61:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1670:98;662:36:61::1;;;;;;;;;;;;;;-1:-1:-1::0;;;662:36:61::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;662:36:61::1;;::::0;:12:::1;:36::i;:::-;708:16;:14;:16::i;:::-;734:61;748:4;782:10;:8;:10::i;:::-;774:19;;768:2;:25;755:9;:39;734:5;:61::i;:::-;805:50;822:4;829:10;841:13;:11;:13::i;805:50::-;1794:14:107::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:107;;;1790:66;591:271:61;:::o;1335:85:103:-;1407:6;;-1:-1:-1;;;;;1407:6:103;1335:85;:::o;2719:93:108:-;2798:7;2791:14;;;;;;;;-1:-1:-1;;2791:14:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2766:13;;2791:14;;2798:7;;2791:14;;2798:7;2791:14;;;;;;;;;;;;;;;;;;;;;;;;6640:266;6733:4;6749:129;6758:12;:10;:12::i;:::-;6772:7;6781:96;6820:15;6781:96;;;;;;;;;;;;;;;;;:11;:25;6793:12;:10;:12::i;:::-;-1:-1:-1;;;;;6781:25:108;;;;;;;;;;;;;;;;;-1:-1:-1;6781:25:108;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4076:172::-;4162:4;4178:42;4188:12;:10;:12::i;:::-;4202:9;4213:6;4178:9;:42::i;4306:149::-;-1:-1:-1;;;;;4421:18:108;;;4395:7;4421:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4306:149::o;2261:240:103:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:103;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:103;;1539:68;;;;;-1:-1:-1;;;1539:68:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2349:22:103;::::1;2341:73;;;;-1:-1:-1::0;;;2341:73:103::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:6;::::0;2429:38:::1;::::0;-1:-1:-1;;;;;2429:38:103;;::::1;::::0;2450:6:::1;::::0;2429:38:::1;::::0;2450:6:::1;::::0;2429:38:::1;2477:6;:17:::0;;-1:-1:-1;;;;;;2477:17:103::1;-1:-1:-1::0;;;;;2477:17:103;;;::::1;::::0;;;::::1;::::0;;2261:240::o;828:104:116:-;915:10;828:104;:::o;9704:340:108:-;-1:-1:-1;;;;;9805:19:108;;9797:68;;;;-1:-1:-1;;;9797:68:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9883:21:108;;9875:68;;;;-1:-1:-1;;;9875:68:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9954:18:108;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10005:32;;;;;;;;;;;;;;;;;9704:340;;;:::o;7380:530::-;-1:-1:-1;;;;;7485:20:108;;7477:70;;;;-1:-1:-1;;;7477:70:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7565:23:108;;7557:71;;;;-1:-1:-1;;;7557:71:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:47;7660:6;7668:9;7679:6;7639:20;:47::i;:::-;7717:71;7739:6;7717:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7717:17:108;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7697:17:108;;;;;;;:9;:17;;;;;;:91;;;;7821:20;;;;;;;:32;;7846:6;7821:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7798:20:108;;;;;;;:9;:20;;;;;;;;;:55;;;;7868:35;;;;;;;7798:20;;7868:35;;;;;;;;;;;;;7380:530;;;:::o;5443:163:106:-;5529:7;5564:12;5556:6;;;;5548:29;;;;-1:-1:-1;;;5548:29:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5548:29:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5594:5:106;;;5443:163::o;2701:175::-;2759:7;2790:5;;;2813:6;;;;2805:46;;;;;-1:-1:-1;;;2805:46:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:1;2701:175;-1:-1:-1;;;2701:175:106:o;8181:370:108:-;-1:-1:-1;;;;;8264:21:108;;8256:65;;;;;-1:-1:-1;;;8256:65:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;8332:49;8361:1;8365:7;8374:6;8332:20;:49::i;:::-;8407:12;;:24;;8424:6;8407:24;:16;:24;:::i;:::-;8392:12;:39;-1:-1:-1;;;;;8462:18:108;;;;;;:9;:18;;;;;;:30;;8485:6;8462:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8441:18:108;;;;;;:9;:18;;;;;;;;:51;;;;8507:37;;;;;;;8441:18;;;;8507:37;;;;;;;;;;8181:370;;:::o;1952:123:107:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;2090:178:108:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1670:98;2187:26:108::1;:24;:26::i;:::-;2223:38;2246:5;2253:7;2223:22;:38::i;:::-;1794:14:107::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:107;;;1790:66;2090:178:108;;;:::o;935:126:103:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1670:98;992:26:103::1;:24;:26::i;:::-;1028;:24;:26::i;737:413:115:-:0;1097:20;1135:8;;;737:413::o;759:64:116:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1794:14;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:107;;;759:64:116;:::o;2274:178:108:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1670:98;2381:13:108;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:108;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2431:9:108::1;:14:::0;;-1:-1:-1;;2431:14:108::1;2443:2;2431:14;::::0;;1790:66:107;;;;1840:5;1824:21;;-1:-1:-1;;1824:21:107;;;2274:178:108;;;:::o;1067:192:103:-;1512:13:107;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:107;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:107;;;;;1738:19;1720:4;1738:19;;;1670:98;1134:17:103::1;1154:12;:10;:12::i;:::-;1176:6;:18:::0;;-1:-1:-1;;;;;;1176:18:103::1;-1:-1:-1::0;;;;;1176:18:103;::::1;::::0;;::::1;::::0;;;1209:43:::1;::::0;1176:18;;-1:-1:-1;1176:18:103;-1:-1:-1;;1209:43:103::1;::::0;-1:-1:-1;;1209:43:103::1;1778:1:107;1794:14:::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:107;;;1067:192:103;:::o;525:450:61:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;525:450:61;;;-1:-1:-1;525:450:61;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.2;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `ERC20` functions.\n * Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol\n */\ncontract ValorToken is ERC20Upgradeable, OwnableUpgradeable {\n    function initialize()\n        public\n        initializer\n    {\n        __ERC20_init(\"Valor Token\", \"VALOR\");\n        __Ownable_init();\n        _mint(address(this), 100000000 * (10 ** uint256(decimals())));\n        _approve(address(this), msg.sender, totalSupply());\n    }\n\n    function mint(address account, uint256 amount) external onlyOwner {\n        _mint(account, amount);\n    }\n}",
  "sourcePath": "/mnt/e/work/cryptoblades/contracts/ValorToken.sol",
  "ast": {
    "absolutePath": "/mnt/e/work/cryptoblades/contracts/ValorToken.sol",
    "exportedSymbols": {
      "ValorToken": [
        40269
      ]
    },
    "id": 40270,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40204,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:61"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 40205,
        "nodeType": "ImportDirective",
        "scope": 40270,
        "sourceUnit": 63510,
        "src": "25:78:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 40206,
        "nodeType": "ImportDirective",
        "scope": 40270,
        "sourceUnit": 62475,
        "src": "104:75:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40208,
              "name": "ERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 63509,
              "src": "548:16:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$63509",
                "typeString": "contract ERC20Upgradeable"
              }
            },
            "id": 40209,
            "nodeType": "InheritanceSpecifier",
            "src": "548:16:61"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40210,
              "name": "OwnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 62474,
              "src": "566:18:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeable_$62474",
                "typeString": "contract OwnableUpgradeable"
              }
            },
            "id": 40211,
            "nodeType": "InheritanceSpecifier",
            "src": "566:18:61"
          }
        ],
        "contractDependencies": [
          62474,
          62979,
          63509,
          63587,
          65042
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 40207,
          "nodeType": "StructuredDocumentation",
          "src": "181:343:61",
          "text": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.\nBased on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol"
        },
        "fullyImplemented": true,
        "id": 40269,
        "linearizedBaseContracts": [
          40269,
          62474,
          63509,
          63587,
          65042,
          62979
        ],
        "name": "ValorToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 40252,
              "nodeType": "Block",
              "src": "652:210:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c6f7220546f6b656e",
                        "id": 40217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "675:13:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81bc3e856a3f74ffa4dcd6c405702da3c6dfa41e6974e75772565bdc81702c2",
                          "typeString": "literal_string \"Valor Token\""
                        },
                        "value": "Valor Token"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56414c4f52",
                        "id": 40218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:7:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fe5550c9d7ca1984efa9eea1abce996f6de71e5ff6acb9eb673706fdf353e8f",
                          "typeString": "literal_string \"VALOR\""
                        },
                        "value": "VALOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b81bc3e856a3f74ffa4dcd6c405702da3c6dfa41e6974e75772565bdc81702c2",
                          "typeString": "literal_string \"Valor Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fe5550c9d7ca1984efa9eea1abce996f6de71e5ff6acb9eb673706fdf353e8f",
                          "typeString": "literal_string \"VALOR\""
                        }
                      ],
                      "id": 40216,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63032,
                      "src": "662:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 40219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "662:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40220,
                  "nodeType": "ExpressionStatement",
                  "src": "662:36:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40221,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62373,
                      "src": "708:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:16:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40223,
                  "nodeType": "ExpressionStatement",
                  "src": "708:16:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 40227,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "748:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValorToken_$40269",
                              "typeString": "contract ValorToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ValorToken_$40269",
                              "typeString": "contract ValorToken"
                            }
                          ],
                          "id": 40226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "740:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "740:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 40228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "740:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030303030303030",
                          "id": 40229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "755:9:61",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 40230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "768:2:61",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 40233,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63081,
                                      "src": "782:8:61",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 40234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "782:10:61",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 40232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "774:7:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 40231,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "774:7:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 40235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "774:19:61",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "768:25:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 40237,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "767:27:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "755:39:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40224,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63381,
                      "src": "734:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40240,
                  "nodeType": "ExpressionStatement",
                  "src": "734:61:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 40244,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "822:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValorToken_$40269",
                              "typeString": "contract ValorToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ValorToken_$40269",
                              "typeString": "contract ValorToken"
                            }
                          ],
                          "id": 40243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "814:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40242,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "814:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 40245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "814:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 40246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "829:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "829:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 40248,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63091,
                          "src": "841:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 40249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "841:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40241,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63482,
                      "src": "805:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 40250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:50:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40251,
                  "nodeType": "ExpressionStatement",
                  "src": "805:50:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 40253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 40214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 40213,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 62962,
                  "src": "636:11:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "636:11:61"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 40212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:61"
            },
            "returnParameters": {
              "id": 40215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:61"
            },
            "scope": 40269,
            "src": "591:271:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40267,
              "nodeType": "Block",
              "src": "934:39:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 40263,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40255,
                        "src": "950:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 40264,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40257,
                        "src": "959:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40262,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63381,
                      "src": "944:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:22:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40266,
                  "nodeType": "ExpressionStatement",
                  "src": "944:22:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 40268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 40260,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 40259,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 62419,
                  "src": "924:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "924:9:61"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 40258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40255,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 40268,
                  "src": "882:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40257,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 40268,
                  "src": "899:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:33:61"
            },
            "returnParameters": {
              "id": 40261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:61"
            },
            "scope": 40269,
            "src": "868:105:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 40270,
        "src": "525:450:61"
      }
    ],
    "src": "0:975:61"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/mnt/e/work/cryptoblades/contracts/ValorToken.sol",
      "exportedSymbols": {
        "ValorToken": [
          40269
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".2"
          ]
        },
        "id": 40204,
        "name": "PragmaDirective",
        "src": "0:23:61"
      },
      {
        "attributes": {
          "SourceUnit": 63510,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "scope": 40270,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 40205,
        "name": "ImportDirective",
        "src": "25:78:61"
      },
      {
        "attributes": {
          "SourceUnit": 62475,
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "scope": 40270,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 40206,
        "name": "ImportDirective",
        "src": "104:75:61"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            62474,
            62979,
            63509,
            63587,
            65042
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            40269,
            62474,
            63509,
            63587,
            65042,
            62979
          ],
          "name": "ValorToken",
          "scope": 40270
        },
        "children": [
          {
            "attributes": {
              "text": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.\nBased on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol"
            },
            "id": 40207,
            "name": "StructuredDocumentation",
            "src": "181:343:61"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Upgradeable",
                  "referencedDeclaration": 63509,
                  "type": "contract ERC20Upgradeable"
                },
                "id": 40208,
                "name": "UserDefinedTypeName",
                "src": "548:16:61"
              }
            ],
            "id": 40209,
            "name": "InheritanceSpecifier",
            "src": "548:16:61"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "OwnableUpgradeable",
                  "referencedDeclaration": 62474,
                  "type": "contract OwnableUpgradeable"
                },
                "id": 40210,
                "name": "UserDefinedTypeName",
                "src": "566:18:61"
              }
            ],
            "id": 40211,
            "name": "InheritanceSpecifier",
            "src": "566:18:61"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8129fc1c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "overrides": null,
              "scope": 40269,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40212,
                "name": "ParameterList",
                "src": "610:2:61"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40215,
                "name": "ParameterList",
                "src": "652:0:61"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 62962,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 40213,
                    "name": "Identifier",
                    "src": "636:11:61"
                  }
                ],
                "id": 40214,
                "name": "ModifierInvocation",
                "src": "636:11:61"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b81bc3e856a3f74ffa4dcd6c405702da3c6dfa41e6974e75772565bdc81702c2",
                                  "typeString": "literal_string \"Valor Token\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5fe5550c9d7ca1984efa9eea1abce996f6de71e5ff6acb9eb673706fdf353e8f",
                                  "typeString": "literal_string \"VALOR\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 63032,
                              "type": "function (string memory,string memory)",
                              "value": "__ERC20_init"
                            },
                            "id": 40216,
                            "name": "Identifier",
                            "src": "662:12:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "56616c6f7220546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Valor Token\"",
                              "value": "Valor Token"
                            },
                            "id": 40217,
                            "name": "Literal",
                            "src": "675:13:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "56414c4f52",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"VALOR\"",
                              "value": "VALOR"
                            },
                            "id": 40218,
                            "name": "Literal",
                            "src": "690:7:61"
                          }
                        ],
                        "id": 40219,
                        "name": "FunctionCall",
                        "src": "662:36:61"
                      }
                    ],
                    "id": 40220,
                    "name": "ExpressionStatement",
                    "src": "662:36:61"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 62373,
                              "type": "function ()",
                              "value": "__Ownable_init"
                            },
                            "id": 40221,
                            "name": "Identifier",
                            "src": "708:14:61"
                          }
                        ],
                        "id": 40222,
                        "name": "FunctionCall",
                        "src": "708:16:61"
                      }
                    ],
                    "id": 40223,
                    "name": "ExpressionStatement",
                    "src": "708:16:61"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 63381,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 40224,
                            "name": "Identifier",
                            "src": "734:5:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ValorToken_$40269",
                                      "typeString": "contract ValorToken"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 40225,
                                    "name": "ElementaryTypeName",
                                    "src": "740:7:61"
                                  }
                                ],
                                "id": 40226,
                                "name": "ElementaryTypeNameExpression",
                                "src": "740:7:61"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract ValorToken",
                                  "value": "this"
                                },
                                "id": 40227,
                                "name": "Identifier",
                                "src": "748:4:61"
                              }
                            ],
                            "id": 40228,
                            "name": "FunctionCall",
                            "src": "740:13:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "313030303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 100000000",
                                  "value": "100000000"
                                },
                                "id": 40229,
                                "name": "Literal",
                                "src": "755:9:61"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 40230,
                                        "name": "Literal",
                                        "src": "768:2:61"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": null
                                                },
                                                "id": 40231,
                                                "name": "ElementaryTypeName",
                                                "src": "774:7:61"
                                              }
                                            ],
                                            "id": 40232,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "774:7:61"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "uint8",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 63081,
                                                  "type": "function () view returns (uint8)",
                                                  "value": "decimals"
                                                },
                                                "id": 40233,
                                                "name": "Identifier",
                                                "src": "782:8:61"
                                              }
                                            ],
                                            "id": 40234,
                                            "name": "FunctionCall",
                                            "src": "782:10:61"
                                          }
                                        ],
                                        "id": 40235,
                                        "name": "FunctionCall",
                                        "src": "774:19:61"
                                      }
                                    ],
                                    "id": 40236,
                                    "name": "BinaryOperation",
                                    "src": "768:25:61"
                                  }
                                ],
                                "id": 40237,
                                "name": "TupleExpression",
                                "src": "767:27:61"
                              }
                            ],
                            "id": 40238,
                            "name": "BinaryOperation",
                            "src": "755:39:61"
                          }
                        ],
                        "id": 40239,
                        "name": "FunctionCall",
                        "src": "734:61:61"
                      }
                    ],
                    "id": 40240,
                    "name": "ExpressionStatement",
                    "src": "734:61:61"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 63482,
                              "type": "function (address,address,uint256)",
                              "value": "_approve"
                            },
                            "id": 40241,
                            "name": "Identifier",
                            "src": "805:8:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ValorToken_$40269",
                                      "typeString": "contract ValorToken"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 40242,
                                    "name": "ElementaryTypeName",
                                    "src": "814:7:61"
                                  }
                                ],
                                "id": 40243,
                                "name": "ElementaryTypeNameExpression",
                                "src": "814:7:61"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract ValorToken",
                                  "value": "this"
                                },
                                "id": 40244,
                                "name": "Identifier",
                                "src": "822:4:61"
                              }
                            ],
                            "id": 40245,
                            "name": "FunctionCall",
                            "src": "814:13:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 40246,
                                "name": "Identifier",
                                "src": "829:3:61"
                              }
                            ],
                            "id": 40247,
                            "name": "MemberAccess",
                            "src": "829:10:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 63091,
                                  "type": "function () view returns (uint256)",
                                  "value": "totalSupply"
                                },
                                "id": 40248,
                                "name": "Identifier",
                                "src": "841:11:61"
                              }
                            ],
                            "id": 40249,
                            "name": "FunctionCall",
                            "src": "841:13:61"
                          }
                        ],
                        "id": 40250,
                        "name": "FunctionCall",
                        "src": "805:50:61"
                      }
                    ],
                    "id": 40251,
                    "name": "ExpressionStatement",
                    "src": "805:50:61"
                  }
                ],
                "id": 40252,
                "name": "Block",
                "src": "652:210:61"
              }
            ],
            "id": 40253,
            "name": "FunctionDefinition",
            "src": "591:271:61"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "overrides": null,
              "scope": 40269,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "overrides": null,
                      "scope": 40268,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40254,
                        "name": "ElementaryTypeName",
                        "src": "882:7:61"
                      }
                    ],
                    "id": 40255,
                    "name": "VariableDeclaration",
                    "src": "882:15:61"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 40268,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 40256,
                        "name": "ElementaryTypeName",
                        "src": "899:7:61"
                      }
                    ],
                    "id": 40257,
                    "name": "VariableDeclaration",
                    "src": "899:14:61"
                  }
                ],
                "id": 40258,
                "name": "ParameterList",
                "src": "881:33:61"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40261,
                "name": "ParameterList",
                "src": "934:0:61"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 62419,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 40259,
                    "name": "Identifier",
                    "src": "924:9:61"
                  }
                ],
                "id": 40260,
                "name": "ModifierInvocation",
                "src": "924:9:61"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 63381,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 40262,
                            "name": "Identifier",
                            "src": "944:5:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40255,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 40263,
                            "name": "Identifier",
                            "src": "950:7:61"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40257,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 40264,
                            "name": "Identifier",
                            "src": "959:6:61"
                          }
                        ],
                        "id": 40265,
                        "name": "FunctionCall",
                        "src": "944:22:61"
                      }
                    ],
                    "id": 40266,
                    "name": "ExpressionStatement",
                    "src": "944:22:61"
                  }
                ],
                "id": 40267,
                "name": "Block",
                "src": "934:39:61"
              }
            ],
            "id": 40268,
            "name": "FunctionDefinition",
            "src": "868:105:61"
          }
        ],
        "id": 40269,
        "name": "ContractDefinition",
        "src": "525:450:61"
      }
    ],
    "id": 40270,
    "name": "SourceUnit",
    "src": "0:975:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.5+commit.f956cc89.Emscripten.clang"
  },
  "networks": {
    "52": {
      "events": {},
      "links": {},
      "address": "0xB695533062023709a379AFC1aA966Fcf4AeF7527",
      "transactionHash": "0x5880fb0970e25707843b8ed3131895892bb577c736e6d157395ad79af9e3ecaf"
    },
    "53": {
      "events": {},
      "links": {},
      "address": "0xe1154cB3Ba6E0a0735B6419A5a443b39127492f8",
      "transactionHash": "0xdafa4f436dc6cf4d1a7e7420fdc55588d7cf0aa6934e42acaaff85b1f2600f13"
    },
    "56": {
      "events": {},
      "links": {},
      "address": "0x4Db374Da614c3653DdEaD0cB8f96BD90c87602C1",
      "transactionHash": "0x1296a0219f7b39b5364767b5b94e93d65ff286ab03f42a3b43456ce35ade0384"
    },
    "65": {
      "events": {},
      "links": {},
      "address": "0x1c5238605459d69A6356502b6C3aB40b424CD46D",
      "transactionHash": "0x60e9a1b5002e5dcc34a1dfcbfcef4b14c7659dfea408cbe3659c7c12cfeb3a8c"
    },
    "66": {
      "events": {},
      "links": {},
      "address": "0x97B5696E2B4BEDbafbf1dc943bFF918297021bed",
      "transactionHash": "0x1f37df50245bcfd6fa91d9f11dec88ce8915308a1dae157836205e4db33992f2"
    },
    "82": {
      "events": {},
      "links": {},
      "address": "0x365253C1a474FD5DB2d49Bfa5e60bF71dd9decc3"
    },
    "83": {
      "events": {},
      "links": {},
      "address": "0xaD11b3c4F11b3C2bDd5F5667eF27429186A66735",
      "transactionHash": "0x6aecd0fd3895f0f5d55d24a44dda9244cbfa4322b351151ee61f77991e16e571"
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0x5627Fe343268aa0CEAD399102b36690BFAAa76Fe",
      "transactionHash": "0x3d126d6d780b4c62f6ce2ddf2f2a9358c28f7330f8374400b28f4a555c723245"
    },
    "128": {
      "events": {},
      "links": {},
      "address": "0x10897b0Dc251fAcd49F685dbf19a90e200e124AC"
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0x61f42DA134D0473Bd621071c4B509f11E6BEB611",
      "transactionHash": "0x04542822632cebda9368308f9b21782aaafb3c3de03c358ec4b8cdce3acc76a0"
    },
    "256": {
      "events": {},
      "links": {},
      "address": "0xB3d491701f40b882bF745e0C4bff31A247a92039",
      "transactionHash": "0x070984452a38e8f2463fba69b31036b548170769ed7c43b10b897d0c859e8f0f"
    },
    "2222": {
      "events": {},
      "links": {},
      "address": "0xbE999592a2145a8666aFCdc2f3f591cE0473A71d",
      "transactionHash": "0x030ccdfb5cef44c4db753f4b56da0b22e1596c77cd8ab56686166dae9ae61830"
    },
    "43113": {
      "events": {},
      "links": {},
      "address": "0x99816AA1ddB15CB6040EAe869E23Aa6eB1cc0766",
      "transactionHash": "0x54279e5084f643e9d383676ba4a680caedefc902f83bcee84b7701579fce7873"
    },
    "43114": {
      "events": {},
      "links": {},
      "address": "0x634Df36170438ef25cA228f27D1D340fA9C51bC1",
      "transactionHash": "0x3146b9fdf08a7b8decefb243b07093c1e6941639f063f27d52d2526bcda41029"
    },
    "1026062157": {
      "events": {},
      "links": {},
      "address": "0x34F91bFEFAD9b2af065E3d3811A13D8aE53bB799",
      "transactionHash": "0x338f9384d193e885d0a94390c7732f90f023355e3d12e651aac7051dff225b85"
    },
    "1313161554": {
      "events": {},
      "links": {},
      "address": "0x6C86716b80f47C5eb082231C60045DE7640c682C",
      "transactionHash": "0x9db299a4b8862d69b38c7a13dc3afd2d3327241ab838b0435fb199d80d95c593"
    },
    "1313161555": {
      "events": {},
      "links": {},
      "address": "0x5c266380eF0029026879777c8140A8278dDb0175",
      "transactionHash": "0x7087742e390fda25601d4f095c5c7f626f3dc5d2c73b4267cf2ad2425679ceca|{\"gasBurned\":9489485256673,\"tx\":\"BX1ee1yQdfgNrcWHRQQsedbfhgQEkMYf7sU1KbL6QUFQ\"}"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2023-01-24T17:45:31.879Z",
  "devdoc": {
    "details": "Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v2.5.1/contracts/examples/SimpleToken.sol",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "SimpleToken"
  },
  "userdoc": {
    "methods": {}
  }
}